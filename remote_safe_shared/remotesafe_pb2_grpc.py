# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import remote_safe_shared.remotesafe_pb2 as remotesafe__pb2


class syncHandlerStub(object):
  """Service which handles file related requests
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetFile = channel.unary_unary(
        '/remotesafe.syncHandler/GetFile',
        request_serializer=remotesafe__pb2.FileInfo.SerializeToString,
        response_deserializer=remotesafe__pb2.FileInfo.FromString,
        )
    self.GetFileList = channel.unary_unary(
        '/remotesafe.syncHandler/GetFileList',
        request_serializer=remotesafe__pb2.Empty.SerializeToString,
        response_deserializer=remotesafe__pb2.FileList.FromString,
        )


class syncHandlerServicer(object):
  """Service which handles file related requests
  """

  def GetFile(self, request, context):
    """Ask for a specific file from the server
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetFileList(self, request, context):
    """Get a list of files from the server
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_syncHandlerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetFile': grpc.unary_unary_rpc_method_handler(
          servicer.GetFile,
          request_deserializer=remotesafe__pb2.FileInfo.FromString,
          response_serializer=remotesafe__pb2.FileInfo.SerializeToString,
      ),
      'GetFileList': grpc.unary_unary_rpc_method_handler(
          servicer.GetFileList,
          request_deserializer=remotesafe__pb2.Empty.FromString,
          response_serializer=remotesafe__pb2.FileList.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'remotesafe.syncHandler', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
